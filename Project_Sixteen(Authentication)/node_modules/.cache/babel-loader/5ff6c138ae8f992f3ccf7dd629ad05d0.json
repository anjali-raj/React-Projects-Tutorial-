{"ast":null,"code":"var _jsxFileName = \"/Users/anjali/Documents/Anjali/React_Tutorial/Project_Sixteen(Authentication)/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\n\nconst calculateRemainingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n  const remainingDuration = adjExpirationTime - currentTine;\n  return remainingDuration;\n};\n\nexport const AuthContextProvider = props => {\n  _s();\n\n  const initialToken = localStorage.getItem('token');\n  const [token, setToken] = useState(initialToken);\n  const userIsLoggedIn = !!token;\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem('token');\n  };\n\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem('token', token);\n    const remainingTime = calculateRemainingTime(expirationTime); //setTimeout(logoutHandler, remainingTime);  \n\n    setTimeout(logoutHandler, 3000);\n  };\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthContextProvider, \"s3jk56xWU5XKZXYqw5SfcwTuysU=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/anjali/Documents/Anjali/React_Tutorial/Project_Sixteen(Authentication)/src/store/auth-context.js"],"names":["React","useState","AuthContext","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","adjExpirationTime","remainingDuration","currentTine","AuthContextProvider","props","initialToken","localStorage","getItem","setToken","userIsLoggedIn","logoutHandler","removeItem","loginHandler","setItem","remainingTime","setTimeout","contextValue","children"],"mappings":";;;AAAC,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AACA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACpCC,EAAAA,KAAK,EAAG,EAD4B;AAEpCC,EAAAA,UAAU,EAAE,KAFwB;AAGpCC,EAAAA,KAAK,EAAIF,KAAD,IAAW,CAAE,CAHe;AAIpCG,EAAAA,MAAM,EAAE,MAAM,CAAE;AAJoB,CAApB,CAApB;;AAOC,MAAMC,sBAAsB,GAAIC,cAAD,IAAoB;AAC/C,QAAMC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAApB;AACA,QAAMC,iBAAiB,GAAG,IAAIF,IAAJ,CAASF,cAAT,EAAyBG,OAAzB,EAA1B;AAEA,QAAME,iBAAiB,GAAGD,iBAAiB,GAAGE,WAA9C;AAEA,SAAOD,iBAAP;AACH,CAPD;;AASD,OAAO,MAAME,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC1C,QAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAArB;AACA,QAAM,CAAChB,KAAD,EAAQiB,QAAR,IAAoBpB,QAAQ,CAACiB,YAAD,CAAlC;AACA,QAAMI,cAAc,GAAG,CAAC,CAAClB,KAAzB;;AAEA,QAAMmB,aAAa,GAAG,MAAM;AACxBF,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAF,IAAAA,YAAY,CAACK,UAAb,CAAwB,OAAxB;AACH,GAHD;;AAKA,QAAMC,YAAY,GAAG,CAACrB,KAAD,EAAQK,cAAR,KAA2B;AAC7CY,IAAAA,QAAQ,CAACjB,KAAD,CAAR;AACAe,IAAAA,YAAY,CAACO,OAAb,CAAqB,OAArB,EAA8BtB,KAA9B;AAEA,UAAMuB,aAAa,GAAGnB,sBAAsB,CAACC,cAAD,CAA5C,CAJ6C,CAK7C;;AACAmB,IAAAA,UAAU,CAACL,aAAD,EAAgB,IAAhB,CAAV;AACH,GAPA;;AASA,QAAMM,YAAY,GAAG;AACjBzB,IAAAA,KAAK,EAAEA,KADU;AAEjBC,IAAAA,UAAU,EAAEiB,cAFK;AAGjBhB,IAAAA,KAAK,EAAEmB,YAHU;AAIjBlB,IAAAA,MAAM,EAAEgB;AAJS,GAArB;AAMA,sBACG,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEM,YAA7B;AAAA,cACIZ,KAAK,CAACa;AADV;AAAA;AAAA;AAAA;AAAA,UADH;AAIH,CA7BM;;GAAMd,mB;;KAAAA,mB;AA8Bb,eAAed,WAAf","sourcesContent":[" import React, { useState } from 'react';\n const AuthContext = React.createContext({\n     token : '',\n     isLoggedIn: false,\n     login : (token) => {},\n     logout: () => {}\n });\n\n  const calculateRemainingTime = (expirationTime) => {\n      const currentTime = new Date().getTime();\n      const adjExpirationTime = new Date(expirationTime).getTime();\n\n      const remainingDuration = adjExpirationTime - currentTine;\n\n      return remainingDuration;\n  };\n\n export const AuthContextProvider = (props) => {\n     const initialToken = localStorage.getItem('token');\n     const [token, setToken] = useState(initialToken);\n     const userIsLoggedIn = !!token;\n\n     const logoutHandler = () => {\n         setToken(null);\n         localStorage.removeItem('token')\n     };\n\n     const loginHandler = (token, expirationTime) => {\n        setToken(token);\n        localStorage.setItem('token', token);\n\n        const remainingTime = calculateRemainingTime(expirationTime);\n        //setTimeout(logoutHandler, remainingTime);  \n        setTimeout(logoutHandler, 3000);\n    };\n\n     const contextValue = {\n         token: token,\n         isLoggedIn: userIsLoggedIn,\n         login: loginHandler,\n         logout: logoutHandler\n     };\n     return (\n        <AuthContext.Provider value={contextValue}>\n           {props.children}\n        </AuthContext.Provider>);\n };\n export default AuthContext;\n "]},"metadata":{},"sourceType":"module"}