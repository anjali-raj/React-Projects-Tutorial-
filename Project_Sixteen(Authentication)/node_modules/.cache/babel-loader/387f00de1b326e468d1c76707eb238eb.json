{"ast":null,"code":"var _jsxFileName = \"/Users/anjali/Documents/Anjali/React_Tutorial/Project_Sixteen(Authentication)/src/components/Auth/AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from 'react';\nimport classes from './AuthForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(true);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const emailEntered = emailInputRef.current.value;\n    const passwordEntered = passwordInputRef.current.value; //Adding Validation\n\n    setIsLoading(true);\n    let url;\n\n    if (isLogin) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBTAoqV7KFAVm-98iX-UeLnCZEdv8KuOI8';\n    } else {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBTAoqV7KFAVm-98iX-UeLnCZEdv8KuOI8';\n    }\n\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        email: emailEntered,\n        password: passwordEntered,\n        returnSecureToken: true\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      setIsLoading(false);\n\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then(data => {\n          let errorMessage = 'Authentication Failed!'; // if(data && data.error && data.error.message){\n          //   errorMessage = data.error.message;\n          // } \n\n          throw new Error(errorMessage);\n        });\n      }\n    }).then(data => {\n      console.log(data);\n    }).catch(err => {\n      alert(err.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          ref: emailInputRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          ref: passwordInputRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [\" }\", !isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 24\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Loading... \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Create new account' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"BK87Tmq4YhBk3Tm7CxzYeqQRP60=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["/Users/anjali/Documents/Anjali/React_Tutorial/Project_Sixteen(Authentication)/src/components/Auth/AuthForm.js"],"names":["useState","useRef","classes","AuthForm","isLogin","setIsLogin","isLoading","setIsLoading","emailInputRef","passwordInputRef","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","emailEntered","current","value","passwordEntered","url","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","errorMessage","Error","console","log","catch","err","alert","message","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useState,  useRef } from 'react';\n\nimport classes from './AuthForm.module.css';\n\nconst AuthForm = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(true); \n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const emailEntered = emailInputRef.current.value;\n    const passwordEntered = passwordInputRef.current.value;\n\n    //Adding Validation\n    setIsLoading(true);\n    let url;\n    if(isLogin) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBTAoqV7KFAVm-98iX-UeLnCZEdv8KuOI8'\n    }\n    else {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBTAoqV7KFAVm-98iX-UeLnCZEdv8KuOI8'\n    }\n    \n    fetch(url, \n    {\n      method : 'POST',\n      body: JSON.stringify({\n        email : emailEntered,\n        password : passwordEntered,\n        returnSecureToken : true\n      }),\n      headers: {\n        'Content-Type' : 'application/json'\n      }\n    }).then(res => {\n      setIsLoading(false);\n      if (res.ok) {\n        return res.json();\n      }\n      else {\n        return res.json().then(data => {\n          let errorMessage ='Authentication Failed!';\n          // if(data && data.error && data.error.message){\n          //   errorMessage = data.error.message;\n          // } \n          \n          throw new Error(errorMessage)\n        });\n      }\n    }).then((data) => {\n      console.log(data)\n    }).catch(err => {\n      alert(err.message);\n    }\n      );\n  }\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' ref={emailInputRef} required />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input type='password' id='password' ref={passwordInputRef} required />\n        </div>\n        <div className={classes.actions}> }\n        {!isLoading && <button>{isLogin ? 'Login' : 'Create Account'}</button>}\n        {isLoading && <p> Loading... </p>}\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}