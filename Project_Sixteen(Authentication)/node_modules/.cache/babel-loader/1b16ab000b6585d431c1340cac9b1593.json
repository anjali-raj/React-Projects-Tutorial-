{"ast":null,"code":"var _jsxFileName = \"/Users/anjali/Documents/Anjali/React_Tutorial/Project_Sixteen(Authentication)/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet logoutTimer;\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\n\nconst calculateRemainingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n  const remainingDuration = adjExpirationTime - currentTime;\n  return remainingDuration;\n};\n\nconst retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem('token');\n  const storedExpirationDate = localStorage.getItem('expirationTime');\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n\n  if (remainingTime <= 3600) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    duration: remainingTime\n  };\n};\n\nexport const AuthContextProvider = props => {\n  _s();\n\n  const tokenData = retrieveStoredToken();\n  let initialToken;\n\n  if (tokenData) {\n    initialToken = tokenData.token;\n  }\n\n  const [token, setToken] = useState(initialToken);\n  const userIsLoggedIn = !!token;\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  };\n\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem('token', token);\n    localStorage.setItem('expirationTime', expirationTime);\n    const remainingTime = calculateRemainingTime(expirationTime);\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      console.log(tokenData.duration);\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData]);\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthContextProvider, \"w4PGjzwU+znkNWWv/cmJxDZqQPE=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/anjali/Documents/Anjali/React_Tutorial/Project_Sixteen(Authentication)/src/store/auth-context.js"],"names":["React","useState","useEffect","logoutTimer","AuthContext","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","adjExpirationTime","remainingDuration","retrieveStoredToken","storedToken","localStorage","getItem","storedExpirationDate","remainingTime","removeItem","duration","AuthContextProvider","props","tokenData","initialToken","setToken","userIsLoggedIn","logoutHandler","clearTimeout","loginHandler","setItem","setTimeout","console","log","contextValue","children"],"mappings":"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","sourcesContent":[" import React, { useState, useEffect } from 'react';\n\nlet logoutTimer;\n\n const AuthContext = React.createContext({\n     token : '',\n     isLoggedIn: false,\n     login : (token) => {},\n     logout: () => {}\n });\n\n  const calculateRemainingTime = (expirationTime) => {\n      const currentTime = new Date().getTime();\n      const adjExpirationTime = new Date(expirationTime).getTime();\n\n      const remainingDuration = adjExpirationTime - currentTime;\n\n      return remainingDuration;\n  };\n\n  const retrieveStoredToken = () => {\n    const storedToken = localStorage.getItem('token');\n    const storedExpirationDate = localStorage.getItem('expirationTime');\n    const remainingTime = calculateRemainingTime(storedExpirationDate);\n\n    if(remainingTime <= 3600) {\n        localStorage.removeItem('token');\n        localStorage.removeItem('expirationTime');\n        return null;\n    }\n\n    return {\n        token : storedToken,\n        duration: remainingTime\n    };\n  };\n\n export const AuthContextProvider = (props) => {\n     const tokenData = retrieveStoredToken();\n     let initialToken;\n     if(tokenData) {\n        initialToken = tokenData.token;\n     }\n     \n     const [token, setToken] = useState(initialToken);\n     const userIsLoggedIn = !!token;\n\n     const logoutHandler = () => {\n         setToken(null);\n         localStorage.removeItem('token');\n         localStorage.removeItem('expirationTime');\n\n         if(logoutTimer) {\n             clearTimeout(logoutTimer);\n         }\n     };\n\n     const loginHandler = (token, expirationTime) => {\n        setToken(token);\n        localStorage.setItem('token', token);\n        localStorage.setItem('expirationTime', expirationTime);\n\n        const remainingTime = calculateRemainingTime(expirationTime);\n        logoutTimer = setTimeout(logoutHandler, remainingTime);  \n    };\n\n    useEffect(() => {\n        if (tokenData) {\n            console.log(tokenData.duration);\n            logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n        }\n    },[tokenData])\n\n     const contextValue = {\n         token: token,\n         isLoggedIn: userIsLoggedIn,\n         login: loginHandler,\n         logout: logoutHandler\n     };\n     return (\n        <AuthContext.Provider value={contextValue}>\n           {props.children}\n        </AuthContext.Provider>);\n };\n export default AuthContext;\n "]},"metadata":{},"sourceType":"module"}