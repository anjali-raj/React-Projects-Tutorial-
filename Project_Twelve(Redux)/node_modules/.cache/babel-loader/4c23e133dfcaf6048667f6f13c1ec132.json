{"ast":null,"code":"var _jsxFileName = \"/Users/anjali/Documents/Anjali/React_Tutorial/Project_Twelve(Redux)/src/components/Counter.js\",\n    _s = $RefreshSig$();\n\n//import {Component} from 'react';\nimport { useSelector, useDispatch, connect } from 'react-redux';\nimport { counterActions } from '../store/index';\nimport classes from './Counter.module.css'; //Function Based Components\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const counter = useSelector(state => state.counter.counter);\n  const show = useSelector(state => state.counter.showCounter);\n\n  const incrementHandler = () => {\n    //dispatch({type: 'increment'});\n    dispatch(counterActions.increment());\n  };\n\n  const increaseHandler = () => {\n    //dispatch({type: 'increase', value: 5});\n    dispatch(counterActions.increase(5)); //type: some_unique_num, payload: 10}  // any extra data will be having payload\n  };\n\n  const decrementHandler = () => {\n    //dispatch({type: 'decrement'});\n    dispatch(counterActions.decrement());\n  };\n\n  const toggleCounterHandler = () => {\n    //dispatch({type: 'toggle'});\n    dispatch(counterActions.toggleCounter());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incrementHandler,\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increaseHandler,\n        children: \"Increase By 5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decrementHandler,\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Counter, \"a6W6bcAuHVADZPU2xn93xNQZltc=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Counter;\nexport default Counter; //Class Based Component\n// class Counter extends Component{\n//   incrementHandler(){\n//     this.props.increment();\n//   };\n//   decrementHandler(){\n//     this.props.decrement();\n//   };\n//   toggleCounterHandler(){};\n//   render() {\n//     return (\n//       <main className={classes.counter}>\n//         <h1>Redux Counter</h1>\n//         <div className={classes.value}>{this.props.counter}</div>\n//         <div>\n//           <button onClick={this.incrementHandler.bind(this)}>Increment</button>\n//           <button onClick={this.decrementHandler.bind(this)}>Decrement</button>\n//         </div>\n//         <button onClick={this.toggleCounterHandler}>Toggle Counter</button>\n//       </main>\n//     );\n//   }\n// }\n// const mapStateToProps = state => {\n//   return {\n//     counter: state.counter\n//   };\n// }\n// const mapDispatchToProps = dispatch => {\n//     return{\n//       increment : () => dispatch({type: 'increment'}),\n//       decrement : () => dispatch({type: 'decrement'})\n//     }\n// };\n// export default connect(mapStateToProps, mapDispatchToProps)(Counter);\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/Users/anjali/Documents/Anjali/React_Tutorial/Project_Twelve(Redux)/src/components/Counter.js"],"names":["useSelector","useDispatch","connect","counterActions","classes","Counter","dispatch","counter","state","show","showCounter","incrementHandler","increment","increaseHandler","increase","decrementHandler","decrement","toggleCounterHandler","toggleCounter","value"],"mappings":";;;AAAA;AACA,SAASA,WAAT,EAAsBC,WAAtB,EAAmCC,OAAnC,QAAkD,aAAlD;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAOC,OAAP,MAAoB,sBAApB,C,CAEA;;;;AACA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,OAAO,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,OAAN,CAAcA,OAAxB,CAA3B;AACA,QAAME,IAAI,GAAGT,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,OAAN,CAAcG,WAAxB,CAAxB;;AAEA,QAAMC,gBAAgB,GAAG,MAAM;AAC7B;AACAL,IAAAA,QAAQ,CAACH,cAAc,CAACS,SAAf,EAAD,CAAR;AACD,GAHD;;AAKA,QAAMC,eAAe,GAAG,MAAM;AAC5B;AACAP,IAAAA,QAAQ,CAACH,cAAc,CAACW,QAAf,CAAwB,CAAxB,CAAD,CAAR,CAF4B,CAEU;AACvC,GAHD;;AAKA,QAAMC,gBAAgB,GAAG,MAAM;AAC7B;AACAT,IAAAA,QAAQ,CAACH,cAAc,CAACa,SAAf,EAAD,CAAR;AACD,GAHD;;AAKA,QAAMC,oBAAoB,GAAG,MAAM;AACjC;AACAX,IAAAA,QAAQ,CAACH,cAAc,CAACe,aAAf,EAAD,CAAR;AACD,GAHD;;AAKA,sBACE;AAAM,IAAA,SAAS,EAAEd,OAAO,CAACG,OAAzB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGE,IAAI,iBAAI;AAAK,MAAA,SAAS,EAAEL,OAAO,CAACe,KAAxB;AAAA,gBAAgCZ;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFX,eAGE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAEI,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEE,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAEE,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAQE;AAAQ,MAAA,OAAO,EAAEE,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CArCD;;GAAMZ,O;UACaJ,W,EACDD,W,EACHA,W;;;KAHTK,O;AAuCN,eAAeA,OAAf,C,CAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["//import {Component} from 'react';\nimport { useSelector, useDispatch, connect } from 'react-redux';\nimport { counterActions } from '../store/index';\nimport classes from './Counter.module.css';\n\n//Function Based Components\nconst Counter = () => {\n  const dispatch = useDispatch();\n  const counter = useSelector(state => state.counter.counter);\n  const show = useSelector(state => state.counter.showCounter);\n\n  const incrementHandler = () => {\n    //dispatch({type: 'increment'});\n    dispatch(counterActions.increment());\n  };\n\n  const increaseHandler = () => {\n    //dispatch({type: 'increase', value: 5});\n    dispatch(counterActions.increase(5)); //type: some_unique_num, payload: 10}  // any extra data will be having payload\n  }\n\n  const decrementHandler = () => {\n    //dispatch({type: 'decrement'});\n    dispatch(counterActions.decrement());\n  };\n\n  const toggleCounterHandler = () => {\n    //dispatch({type: 'toggle'});\n    dispatch(counterActions.toggleCounter());\n  };\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      {show && <div className={classes.value}>{counter}</div>}\n      <div>\n        <button onClick={incrementHandler}>Increment</button>\n        <button onClick={increaseHandler}>Increase By 5</button>\n        <button onClick={decrementHandler}>Decrement</button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\nexport default Counter;\n\n\n//Class Based Component\n// class Counter extends Component{\n//   incrementHandler(){\n//     this.props.increment();\n//   };\n\n//   decrementHandler(){\n//     this.props.decrement();\n//   };\n\n//   toggleCounterHandler(){};\n//   render() {\n//     return (\n//       <main className={classes.counter}>\n//         <h1>Redux Counter</h1>\n//         <div className={classes.value}>{this.props.counter}</div>\n//         <div>\n//           <button onClick={this.incrementHandler.bind(this)}>Increment</button>\n//           <button onClick={this.decrementHandler.bind(this)}>Decrement</button>\n//         </div>\n//         <button onClick={this.toggleCounterHandler}>Toggle Counter</button>\n//       </main>\n//     );\n//   }\n// }\n\n// const mapStateToProps = state => {\n//   return {\n//     counter: state.counter\n//   };\n// }\n\n// const mapDispatchToProps = dispatch => {\n//     return{\n//       increment : () => dispatch({type: 'increment'}),\n//       decrement : () => dispatch({type: 'decrement'})\n//     }\n// };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Counter);\n\n\n"]},"metadata":{},"sourceType":"module"}