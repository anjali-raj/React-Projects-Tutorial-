{"ast":null,"code":"var _jsxFileName = \"/Users/anjali/Documents/React_Tutorial/Project_Ten(Custom_Hooks)/src/components/NewTask/NewTask.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTask = props => {\n  _s();\n\n  const {\n    isLoading,\n    error,\n    sendRequest: sendTaskRequest\n  } = useHttp();\n\n  const enterTaskHandler = async (taskText, taskData) => {\n    const createTask = taskData => {\n      const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n\n      const createdTask = {\n        id: generatedId,\n        text: taskText\n      };\n      props.onAddTask(createdTask);\n    };\n\n    sendTaskRequest({\n      url: 'https://react-rest-97351-default-rtdb.firebaseio.com/tasks.json',\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: {\n        text: taskText\n      }\n    }, createTask.body(null, taskText));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTask, \"flyXDYo9XtD2xRwNing8LFiPUr4=\", false, function () {\n  return [useHttp];\n});\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"sources":["/Users/anjali/Documents/React_Tutorial/Project_Ten(Custom_Hooks)/src/components/NewTask/NewTask.js"],"names":["useState","useHttp","Section","TaskForm","NewTask","props","isLoading","error","sendRequest","sendTaskRequest","enterTaskHandler","taskText","taskData","createTask","generatedId","name","createdTask","id","text","onAddTask","url","method","headers","body"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM;AAACC,IAAAA,SAAD;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,WAAW,EAAEC;AAAhC,MAAmDR,OAAO,EAAhE;;AAIA,QAAMS,gBAAgB,GAAG,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACrD,UAAMC,UAAU,GAAID,QAAD,IAAc;AAC/B,YAAME,WAAW,GAAGF,QAAQ,CAACG,IAA7B,CAD+B,CACI;;AACnC,YAAMC,WAAW,GAAG;AAAEC,QAAAA,EAAE,EAAEH,WAAN;AAAmBI,QAAAA,IAAI,EAAEP;AAAzB,OAApB;AACAN,MAAAA,KAAK,CAACc,SAAN,CAAgBH,WAAhB;AACD,KAJD;;AAMAP,IAAAA,eAAe,CAAC;AAACW,MAAAA,GAAG,EAAE,iEAAN;AAAyEC,MAAAA,MAAM,EAAE,MAAjF;AAAyFC,MAAAA,OAAO,EAAE;AAChH,wBAAgB;AADgG,OAAlG;AAEbC,MAAAA,IAAI,EAAE;AAAEL,QAAAA,IAAI,EAAEP;AAAR;AAFO,KAAD,EAGdE,UAAU,CAACU,IAAX,CAAgB,IAAhB,EAAsBZ,QAAtB,CAHc,CAAf;AAQD,GAfD;;AAiBA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,WAAW,EAAED,gBAAvB;AAAyC,MAAA,OAAO,EAAEJ;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,KAAK,iBAAI;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA5BD;;GAAMH,O;UACqDH,O;;;KADrDG,O;AA8BN,eAAeA,OAAf","sourcesContent":["import { useState } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\n\nconst NewTask = (props) => {\n  const {isLoading, error, sendRequest: sendTaskRequest} = useHttp();\n\n  \n\n  const enterTaskHandler = async (taskText, taskData) => {\n    const createTask = (taskData) => {\n      const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n      const createdTask = { id: generatedId, text: taskText };\n      props.onAddTask(createdTask);\n    };\n\n    sendTaskRequest({url: 'https://react-rest-97351-default-rtdb.firebaseio.com/tasks.json', method: 'POST', headers: {\n      'Content-Type': 'application/json',\n    }, body: { text: taskText }\n  }, createTask.body(null, taskText));\n\n    \n\n      \n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}