{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n'@reduxjs/toolkit';\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    changed: false\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      state.changeProperty = true;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++, existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      state.totalQuantity--;\n      const existingItem = state.items.find(item => item.id === id);\n      state.changeProperty = true;\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"sources":["/Users/anjali/Documents/Anjali/React_Tutorial/Project_Thirteen(Advanced_Redux)/src/store/cart-slice.js"],"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","changed","reducers","replaceCart","state","action","payload","addItemToCart","newItem","changeProperty","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","cartActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAAiD;AAEjD,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC1BE,EAAAA,IAAI,EAAE,MADoB;AAE1BC,EAAAA,YAAY,EAAE;AAACC,IAAAA,KAAK,EAAG,EAAT;AAAaC,IAAAA,aAAa,EAAE,CAA5B;AAA+BC,IAAAA,OAAO,EAAE;AAAxC,GAFY;AAG1BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACvBD,MAAAA,KAAK,CAACJ,aAAN,GAAsBK,MAAM,CAACC,OAAP,CAAeN,aAArC;AACAI,MAAAA,KAAK,CAACL,KAAN,GAAcM,MAAM,CAACC,OAAP,CAAeP,KAA7B;AACD,KAJG;;AAKNQ,IAAAA,aAAa,CAACH,KAAD,EAAQC,MAAR,EAAe;AACxB,YAAMG,OAAO,GAAGH,MAAM,CAACC,OAAvB;AACAF,MAAAA,KAAK,CAACK,cAAN,GAAuB,IAAvB;AACA,YAAMC,YAAY,GAAGN,KAAK,CAACL,KAAN,CAAYY,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA7C,CAArB;AACAT,MAAAA,KAAK,CAACJ,aAAN;;AACA,UAAG,CAACU,YAAJ,EAAkB;AACdN,QAAAA,KAAK,CAACL,KAAN,CAAYe,IAAZ,CAAiB;AACbD,UAAAA,EAAE,EAAEL,OAAO,CAACK,EADC;AAEbE,UAAAA,KAAK,EAAEP,OAAO,CAACO,KAFF;AAGbC,UAAAA,QAAQ,EAAE,CAHG;AAIbC,UAAAA,UAAU,EAAET,OAAO,CAACO,KAJP;AAKblB,UAAAA,IAAI,EAAEW,OAAO,CAACU;AALD,SAAjB;AAOH,OARD,MASK;AACDR,QAAAA,YAAY,CAACM,QAAb,IACAN,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACO,UAAb,GAA0BT,OAAO,CAACO,KAD5D;AAEH;AACJ,KAvBK;;AAwBNI,IAAAA,kBAAkB,CAACf,KAAD,EAAQC,MAAR,EAAe;AAC7B,YAAMQ,EAAE,GAAGR,MAAM,CAACC,OAAlB;AACAF,MAAAA,KAAK,CAACJ,aAAN;AACA,YAAMU,YAAY,GAAGN,KAAK,CAACL,KAAN,CAAYY,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAArC,CAArB;AACAT,MAAAA,KAAK,CAACK,cAAN,GAAuB,IAAvB;;AACA,UAAIC,YAAY,CAACM,QAAb,KAA0B,CAA9B,EAAgC;AAC5BZ,QAAAA,KAAK,CAACL,KAAN,GAAcK,KAAK,CAACL,KAAN,CAAYqB,MAAZ,CAAmBR,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAAvC,CAAd;AACH,OAFD,MAGK;AACDH,QAAAA,YAAY,CAACM,QAAb;AACAN,QAAAA,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACK,KAAjE;AACH;AACJ;;AApCK;AAHgB,CAAD,CAA7B;AA6CA,OAAO,MAAMM,WAAW,GAAGzB,SAAS,CAAC0B,OAA9B;AAEP,eAAe1B,SAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";  '@reduxjs/toolkit';\n\nconst cartSlice = createSlice({\n    name: 'cart',\n    initialState: {items : [], totalQuantity: 0, changed: false },\n    reducers: {\n        replaceCart(state, action) {\n            state.totalQuantity = action.payload.totalQuantity;\n            state.items = action.payload.items;\n          },\n        addItemToCart(state, action){\n            const newItem = action.payload;\n            state.changeProperty = true;\n            const existingItem = state.items.find(item => item.id === newItem.id);\n            state.totalQuantity++;\n            if(!existingItem) {\n                state.items.push({\n                    id: newItem.id, \n                    price: newItem.price, \n                    quantity: 1, \n                    totalPrice: newItem.price,\n                    name: newItem.title\n                });\n            }\n            else {\n                existingItem.quantity++,\n                existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n            }    \n        },\n        removeItemFromCart(state, action){\n            const id = action.payload;\n            state.totalQuantity--;\n            const existingItem = state.items.find(item => item.id === id);\n            state.changeProperty = true;\n            if (existingItem.quantity === 1){\n                state.items = state.items.filter(item => item.id !== id);\n            }\n            else {\n                existingItem.quantity--;\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n            }\n        }\n    }\n});\n\n\n\nexport const cartActions = cartSlice.actions;\n\nexport default cartSlice;"]},"metadata":{},"sourceType":"module"}