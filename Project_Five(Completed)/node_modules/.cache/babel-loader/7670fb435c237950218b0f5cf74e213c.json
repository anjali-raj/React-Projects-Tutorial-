{"ast":null,"code":"var _jsxFileName = \"/Users/anjali/Documents/React_Tutorial/Project_Five(Completed)/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState();\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  const loginHandler = () => {\n    setIsLoggedIn(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AuthContextProvider, \"c3LRk0sXe4rAIFN7chRXubAk0UY=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/anjali/Documents/React_Tutorial/Project_Five(Completed)/src/store/auth-context.js"],"names":["React","useState","AuthContext","createContext","isLoggedIn","onLogout","AuthContextProvider","props","setIsLoggedIn","logoutHandler","loginHandler","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CACpB;AACIC,EAAAA,UAAU,EAAG,KADjB;AAEIC,EAAAA,QAAQ,EAAG,MAAM,CAAE;AAFvB,CADoB,CAApB;AAMA,OAAO,MAAMC,mBAAmB,GAAGC,KAAD,IAAW;AAAA;;AACzC,QAAM,CAACH,UAAD,EAAaI,aAAb,IAA8BP,QAAQ,EAA5C;;AAEA,QAAMQ,aAAa,GAAG,MAAM;AACxBD,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GAFD;;AAGA,QAAME,YAAY,GAAG,MAAM;AACvBF,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GAFD;;AAGA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAA,cACFD,KAAK,CAACI;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CAZM;;GAAML,mB;;KAAAA,mB;AAcb,eAAeJ,WAAf","sourcesContent":["import React, {useState} from 'react';\n\nconst AuthContext = React.createContext(\n{\n    isLoggedIn : false,\n    onLogout : () => {}\n});\n\nexport const AuthContextProvider =(props) => {\n    const [isLoggedIn, setIsLoggedIn] = useState();\n\n    const logoutHandler = () => {\n        setIsLoggedIn(false);\n    };\n    const loginHandler = () => {\n        setIsLoggedIn(true);\n    };\n    return <AuthContext.Provider>\n        {props.children}\n    </AuthContext.Provider>\n}\n\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}