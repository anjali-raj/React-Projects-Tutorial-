{"ast":null,"code":"var _jsxFileName = \"/Users/anjali/Documents/Anjali/React_Tutorial/Project_Eleven(Forms)/src/components/BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = props => {\n  _s();\n\n  const isNotEmpty = value => value.trim !== '';\n\n  const isEmail = value => value.includes('@');\n\n  const {\n    value: enteredFirstName,\n    isValid: enteredFirstNameIsValid,\n    hasError: firstNameInputHasError,\n    valueChangeHandler: firstNameChangedHandler,\n    valueBlurHandler: firstNameBlurHandler,\n    reset: resetFirstName\n  } = useInput(isNotEmpty);\n  const {\n    value: enteredLastName,\n    isValid: enteredLastNameIsValid,\n    hasError: lastNameInputHasError,\n    valueChangeHandler: lastNameChangedHandler,\n    valueBlurHandler: lastNameBlurHandler,\n    reset: resetLastName\n  } = useInput(isNotEmpty);\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangedHandler,\n    valueBlurHandler: emailBlurHandler,\n    reset: resetEmail\n  } = useInput(isEmail);\n  let formIsValid = false;\n\n  if (enteredFirstNameIsValid && enteredLastNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (!formIsValid) {\n      return;\n    }\n\n    console.log(\"Submitted\");\n    console.log(enteredFirstName, enteredLastName, enteredEmail);\n    resetFirstName();\n    resetLastName();\n    resetEmail();\n  };\n\n  const firstNameInputClasses = firstNameInputHasError ? 'form-control invalid' : 'form-control';\n  const lastNameInputClasses = lastNameInputHasError ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailInputHasError ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: firstNameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"firstName\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"firstName\",\n          onChange: firstNameChangedHandler,\n          onBlur: firstNameBlurHandler,\n          value: enteredFirstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), firstNameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please Enter a First Name.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastNameInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lastName\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"lastName\",\n          onChange: lastNameChangedHandler,\n          onBlur: lastNameBlurHandler,\n          value: enteredLastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), lastNameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please Enter a Last Name.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailChangedHandler,\n        onBlur: emailBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), emailInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Please Enter a valid email address.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"q6hFJx76PjkXVILs9/HCpFtYkRE=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["/Users/anjali/Documents/Anjali/React_Tutorial/Project_Eleven(Forms)/src/components/BasicForm.js"],"names":["useInput","BasicForm","props","isNotEmpty","value","trim","isEmail","includes","enteredFirstName","isValid","enteredFirstNameIsValid","hasError","firstNameInputHasError","valueChangeHandler","firstNameChangedHandler","valueBlurHandler","firstNameBlurHandler","reset","resetFirstName","enteredLastName","enteredLastNameIsValid","lastNameInputHasError","lastNameChangedHandler","lastNameBlurHandler","resetLastName","enteredEmail","enteredEmailIsValid","emailInputHasError","emailChangedHandler","emailBlurHandler","resetEmail","formIsValid","submitHandler","event","preventDefault","console","log","firstNameInputClasses","lastNameInputClasses","emailInputClasses"],"mappings":"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","sourcesContent":["import useInput from \"../hooks/use-input\";\nconst BasicForm = (props) => {\n  const isNotEmpty = value => value.trim !== '';\n   const isEmail = value => value.includes('@');\n  const {\n    value: enteredFirstName,\n    isValid: enteredFirstNameIsValid,\n    hasError: firstNameInputHasError,\n    valueChangeHandler: firstNameChangedHandler,\n    valueBlurHandler: firstNameBlurHandler,\n    reset: resetFirstName\n  } = useInput(isNotEmpty);\n\n  const {\n    value: enteredLastName,\n    isValid: enteredLastNameIsValid,\n    hasError: lastNameInputHasError,\n    valueChangeHandler: lastNameChangedHandler,\n    valueBlurHandler: lastNameBlurHandler,\n    reset: resetLastName\n  } = useInput(isNotEmpty);\n\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangedHandler,\n    valueBlurHandler: emailBlurHandler,\n    reset: resetEmail\n  } = useInput(isEmail);\n\n  let formIsValid = false;\n  if(enteredFirstNameIsValid && enteredLastNameIsValid && enteredEmailIsValid){\n    formIsValid = true;\n  }\n  const submitHandler = event => {\n    event.preventDefault();\n    \n    if(!formIsValid){\n      return;\n    }\n    console.log(\"Submitted\");\n    console.log(enteredFirstName, enteredLastName, enteredEmail);\n    resetFirstName();\n    resetLastName();\n    resetEmail();\n  };\n\n  const firstNameInputClasses = firstNameInputHasError? 'form-control invalid' : 'form-control';\n  const lastNameInputClasses = lastNameInputHasError? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailInputHasError? 'form-control invalid' : 'form-control';\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={firstNameInputClasses}>\n        <div className='form-control'>\n          <label htmlFor='firstName'>First Name</label>\n          <input type='text' id='firstName' \n           onChange={firstNameChangedHandler} \n           onBlur={firstNameBlurHandler} \n           value={enteredFirstName}\n          />\n        </div>\n        {firstNameInputHasError && <p className=\"error-text\">Please Enter a First Name.</p>}\n        <div className={lastNameInputClasses}>\n          <label htmlFor='lastName'>Last Name</label>\n          <input type='text' id='lastName' \n          onChange={lastNameChangedHandler} \n          onBlur={lastNameBlurHandler} \n          value={enteredLastName}\n          />\n        </div>\n        {lastNameInputHasError && <p className=\"error-text\">Please Enter a Last Name.</p>}\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor='email'>E-Mail Address</label>\n        <input type='email' id='email' \n         onChange={emailChangedHandler} \n         onBlur={emailBlurHandler} \n         value={enteredEmail}\n        />\n      </div>\n      {emailInputHasError && <p className=\"error-text\">Please Enter a valid email address.</p>}\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}