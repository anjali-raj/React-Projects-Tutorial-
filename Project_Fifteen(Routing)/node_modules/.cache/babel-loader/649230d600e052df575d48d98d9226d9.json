{"ast":null,"code":"var _jsxFileName = \"/Users/anjali/Documents/Anjali/React_Tutorial/Project_Fifteen(Routing)/src/pages/AllQuotes.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport QuoteList from '../components/quotes/QuoteList';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport useHttp from '../hooks/use-http';\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\nimport { getAllQuotes } from '../lib/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: 'q1',\n  author: 'Max',\n  text: 'Learning React is fun!'\n}, {\n  id: 'q2',\n  author: 'Mad',\n  text: 'I guess Learning React is fun!'\n}, {\n  id: 'q3',\n  author: 'Saddie',\n  text: 'IDK Learning React is fun or not!'\n}];\n\nconst AllQuotes = () => {\n  _s();\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === 'pending') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered focused\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this);\n  }\n\n  if (status === 'completed' && (!loadedQuote || loadedQuote.length === 0)) {\n    return /*#__PURE__*/_jsxDEV(NoQuotesFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(QuoteList, {\n    quotes: loadedQuote\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 11\n  }, this);\n};\n\n_s(AllQuotes, \"AwQc/mVXCxNZYso+YwHzf6ZD1/8=\", false, function () {\n  return [useHttp];\n});\n\n_c = AllQuotes;\nexport default AllQuotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"sources":["/Users/anjali/Documents/Anjali/React_Tutorial/Project_Fifteen(Routing)/src/pages/AllQuotes.js"],"names":["useEffect","QuoteList","LoadingSpinner","useHttp","NoQuotesFound","getAllQuotes","DUMMY_QUOTES","id","author","text","AllQuotes","sendRequest","status","data","loadedQuote","error","length"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,SAASC,YAAT,QAA6B,YAA7B;;AAGA,MAAQC,YAAY,GAAG,CACnB;AAACC,EAAAA,EAAE,EAAE,IAAL;AAAWC,EAAAA,MAAM,EAAE,KAAnB;AAA0BC,EAAAA,IAAI,EAAE;AAAhC,CADmB,EAEnB;AAACF,EAAAA,EAAE,EAAE,IAAL;AAAWC,EAAAA,MAAM,EAAE,KAAnB;AAA0BC,EAAAA,IAAI,EAAE;AAAhC,CAFmB,EAGnB;AAACF,EAAAA,EAAE,EAAE,IAAL;AAAWC,EAAAA,MAAM,EAAE,QAAnB;AAA6BC,EAAAA,IAAI,EAAE;AAAnC,CAHmB,CAAvB;;AAKA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEpB,QAAM;AAACC,IAAAA,WAAD;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,IAAI,EAAEC,WAA5B;AAAyCC,IAAAA;AAAzC,MAAkDZ,OAAO,CAACE,YAAD,EAAe,IAAf,CAA/D;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,WAAW;AACd,GAFQ,EAEP,CAACA,WAAD,CAFO,CAAT;;AAIA,MAAGC,MAAM,KAAK,SAAd,EAAyB;AACrB,wBACA;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBACKG;AADL;AAAA;AAAA;AAAA;AAAA,YADA;AAKH;;AAED,MAAGH,MAAM,KAAK,WAAX,KAA2B,CAACE,WAAD,IAAgBA,WAAW,CAACE,MAAZ,KAAuB,CAAlE,CAAH,EAAyE;AACrE,wBAAO,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAGD,KAAH,EAAU;AACN,wBACA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA;AAKH;;AAEF,sBAAO,QAAC,SAAD;AAAW,IAAA,MAAM,EAAED;AAAnB;AAAA;AAAA;AAAA;AAAA,UAAP;AACF,CA7BD;;GAAMJ,S;UAEsDP,O;;;KAFtDO,S;AA8BN,eAAeA,SAAf","sourcesContent":["import { useEffect } from 'react';\nimport QuoteList from '../components/quotes/QuoteList';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport useHttp from '../hooks/use-http';\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\nimport { getAllQuotes } from '../lib/api';\n\n\nconst   DUMMY_QUOTES = [\n    {id: 'q1', author: 'Max', text: 'Learning React is fun!'},\n    {id: 'q2', author: 'Mad', text: 'I guess Learning React is fun!'},\n    {id: 'q3', author: 'Saddie', text: 'IDK Learning React is fun or not!'},\n];\nconst AllQuotes = () => {\n\n    const {sendRequest, status, data: loadedQuote, error} = useHttp(getAllQuotes, true);\n\n    useEffect(() => {\n        sendRequest();\n    },[sendRequest]);\n\n    if(status === 'pending') {\n        return (\n        <div className=\"centered focused\">\n            {error}\n        </div>\n        );\n    }\n\n    if(status === 'completed' && (!loadedQuote || loadedQuote.length === 0)) {\n        return <NoQuotesFound />\n    }\n\n    if(error) {\n        return (\n        <div className=\"centered\">\n            <LoadingSpinner /> \n        </div>\n        );\n    }\n\n   return <QuoteList quotes={loadedQuote} />\n}\nexport default AllQuotes;"]},"metadata":{},"sourceType":"module"}